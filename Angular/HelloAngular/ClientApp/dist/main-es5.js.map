{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Doctors.ts","webpack:///src/app/Patients.ts","webpack:///src/app/Specialization.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/doctor.component.ts","webpack:///src/app/doctor.component.html","webpack:///src/app/doctor.service.ts","webpack:///src/app/notfound.component.ts","webpack:///src/app/patient.component.ts","webpack:///src/app/patient.component.html","webpack:///src/app/patient.service.ts","webpack:///src/app/specialization.component.ts","webpack:///src/app/specialization.component.html","webpack:///src/app/specialization.service.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Doctors","familyname","firstname","middlename","Created","Deleted","SpecializationId","Specialization","specialization","Patients","Id","Iin","Firstname","Familyname","Middlename","Address","Phonenumber","created","name","AppComponent","specializations","selector","templateUrl","providers","appRoutes","path","component","AppModule","forRoot","imports","declarations","bootstrap","doctorcomponent","doctorservice","doctors","doctor","tableMode","getDoctors","subscribe","data","doc","DoctorService","http","url","urlforcreating","urlfordeleting","get","post","put","docid","NotFoundComponent","template","patientcomponent","patientservice","patients","patient","getPatients","PatientService","specializationcomponent","specializationservice","spec","loadSpecializations","getSpecializations","newspec","goodbyespec","console","log","deleteSpecialization","result","createSpecialization","push","editSpecialization","cancel","add","SpecializationService","specid","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Specialization } from \"./Specialization\";\r\nimport { NumberValueAccessor } from \"@angular/forms\";\r\n\r\nexport class Doctors {\r\n    constructor(\r\n        id?: number,\r\n        familyname?: string,\r\n        firstname?: string,\r\n        middlename?: string,\r\n        Created?: Date,\r\n        Deleted?: Date,\r\n        SpecializationId?: Number,\r\n        Specialization?: string,\r\n        specialization?: any,\r\n    ) {\r\n\r\n    }\r\n}","export class Patients {\r\n    constructor(\r\n        public Id?: number,\r\n        public Iin?: string,\r\n        Firstname?: string,\r\n        Familyname?: string,\r\n        Middlename?: string,\r\n        Address?: string,\r\n        Phonenumber?: string,\r\n        created?: Date\r\n    ) { }\r\n}","export class Specialization {\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public created?: Date\r\n    ) {}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { SpecializationService } from './specialization.service';\r\nimport { Specialization } from './Specialization';\r\nimport { DoctorService } from './doctor.service';\r\n\r\n@Component({\r\n    selector: 'app',\r\n        templateUrl: 'app.component.html',\r\n    providers: [SpecializationService, DoctorService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n    specializations: Specialization[] = [];\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<div>\r\n    <nav>\r\n        <a routerLink=\"\">Главная</a>\r\n    </nav>\r\n    <nav>\r\n        <a routerLink=\"/api/home/specialization\">Специализации</a>\r\n        <a routerLink=\"api/home/doctors\">  Доктора</a>\r\n        <a routerLink=\"api/home/patients\"> Пациенты</a>\r\n    </nav>\r\n    <router-outlet> </router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {Routes, RouterModule} from \"@angular/router\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport {NotFoundComponent} from './notfound.component';\r\nimport {doctorcomponent} from './doctor.component';\r\nimport {specializationcomponent} from './specialization.component';\r\nimport {patientcomponent} from './patient.component';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nconst appRoutes: Routes =[\r\n    { path: 'api/home/specialization', component: specializationcomponent},\r\n    { path: 'api/home/doctors', component: doctorcomponent},\r\n    { path: 'api/home/patients', component: patientcomponent},\r\n    { path: '**', component: NotFoundComponent}\r\n];\r\n \r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(appRoutes)],\r\n    declarations: [AppComponent, specializationcomponent, doctorcomponent, patientcomponent],\r\n    bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { DoctorService } from './doctor.service';\r\nimport { Doctors } from './Doctors';\r\n\r\n@Component({\r\n    selector: 'doctors',\r\n    templateUrl: './doctor.component.html',\r\n    providers: [DoctorService]\r\n})\r\n\r\nexport class doctorcomponent implements OnInit {\r\n    doctors: Doctors[] = [];\r\n    doctor: Doctors = new Doctors();\r\n    tableMode: boolean = true;\r\n    constructor(private doctorservice: DoctorService) { }\r\n\r\n    ngOnInit() {\r\n        this.doctorservice.getDoctors().subscribe((data: Doctors[])=>this.doctors = data);\r\n    }\r\n\r\n    createDoctor(doc: Doctors) {\r\n\r\n    }\r\n\r\n    editDoctor(doc: Doctors) {\r\n    }\r\n\r\n    save() {\r\n        // if (this.spec.id == null ?? ) Если null создаем обьект, если нет то редактируем   \r\n    }\r\n\r\n}\r\n","<!-- <input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />  -->\r\n<h2>Доктора</h2>\r\n<table class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Id</td>\r\n            <td>ФИО</td>\r\n            <td>Создан</td>\r\n            <!-- <td>Специализация</td -->\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let doc of doctors\"> \r\n                <td>{{doc?.id}}</td>\r\n                <td>{{doc?.familyname}} {{doc?.firstname}} {{doc?.middlename}}</td>\r\n                <td>{{doc?.created}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editDoctor(doc)\">\r\n                        Изменить</button>\r\n                    <!-- <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button> -->\r\n                </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #createoredit>\r\n\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Doctors} from './Doctors'\r\n\r\n@Injectable()\r\nexport class DoctorService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private url = \"https://localhost:44351/api/home/doctors\";\r\n    private urlforcreating = \"https://localhost:44351/api/home/CreateDoctor\";\r\n    private urlfordeleting = \"https://localhost:44351/api/home/DeleteDoctor\";\r\n\r\n    getDoctors() {\r\n        return this.http.get(this.url);\r\n    }\r\n    \r\n    getDoctor(id: number) {\r\n        return  this.http.get(this.url+'/'+id);\r\n    }\r\n\r\n    createDoctor(doc: Doctors) {\r\n        return this.http.post(this.urlforcreating, doc);\r\n    }\r\n\r\n    editDoctor(doc: Doctors) {\r\n        return this.http.put(this.url, doc);\r\n    }\r\n\r\n    deleteDoctor(docid: number) {\r\n        return this.http.delete(this.urlfordeleting+'/'+docid);\r\n    }\r\n}","import { Component} from '@angular/core';\r\n  \r\n@Component({\r\n    selector: 'not-found-app',\r\n    template: `<h3>Страница не найдена</h3>`\r\n})\r\nexport class NotFoundComponent { }","import { Component, OnInit } from '@angular/core';\r\nimport { PatientService } from './patient.service';\r\nimport { Patients } from './Patients';\r\n\r\n@Component({\r\n    selector: 'patients',\r\n    templateUrl: './patient.component.html',\r\n    providers: [PatientService]\r\n})\r\n\r\nexport class patientcomponent implements OnInit {\r\n    patients: Patients[] = [];\r\n    patient: Patients = new Patients();\r\n    tableMode: boolean = true;\r\n    constructor(private patientservice: PatientService) { }\r\n\r\n    ngOnInit() {\r\n        this.patientservice.getPatients().subscribe((data: Patients[])=>this.patients = data);\r\n    }\r\n\r\n    createPatient(patient: Patients) {\r\n\r\n    }\r\n\r\n    editPatient(patient: Patients) {\r\n    }\r\n\r\n    save() {\r\n        // if (this.spec.id == null ?? ) Если null создаем обьект, если нет то редактируем   \r\n    }\r\n\r\n}\r\n","<!-- <input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />  -->\r\n<h1>Пациенты</h1>\r\n<table *ngIf=\"tableMode; else createoredit\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>ИИН</td>\r\n            <td>ФИО</td>\r\n            <td>Адрес</td>\r\n            <td>Телефон</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let patient of patients\"> \r\n                <td>{{patient?.iin}}</td>\r\n                <td>{{patient?.familyname}} {{patient?.firstname}} {{patient?.middlename}}</td>\r\n                <td>{{patient?.address}}</td>\r\n                <td>{{patient?.phonenumber}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editPatient(patient)\">\r\n                        Изменить</button>\r\n                    <!-- <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button> -->\r\n                </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #createoredit>\r\n\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Patients} from './Patients'\r\n\r\n@Injectable()\r\nexport class PatientService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private url = \"https://localhost:44351/api/home/patients\";\r\n\r\n    getPatients () {\r\n        return this.http.get(this.url);\r\n    }\r\n    \r\n    getPatient (id: number) {\r\n        return  this.http.get(this.url+'/'+id);\r\n    }\r\n\r\n    createPatient (patient: Patients) {\r\n        return this.http.post(this.url, patient);\r\n    }\r\n\r\n    editPatient (patient: Patients) {\r\n        return this.http.put(this.url, patient);\r\n    }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { SpecializationService } from './specialization.service';\r\nimport { Specialization } from './Specialization';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n    selector: 'specialization',\r\n    templateUrl: './specialization.component.html',\r\n    providers: [SpecializationService]\r\n})\r\n\r\nexport class specializationcomponent implements OnInit {\r\n    specializations: Specialization[] = [];\r\n    spec: Specialization = new Specialization();\r\n    tableMode: boolean = true;\r\n    constructor(private specializationservice: SpecializationService) \r\n    { }\r\n\r\n    ngOnInit() {\r\n        this.loadSpecializations();\r\n    }\r\n\r\n    loadSpecializations() {\r\n        this.specializationservice.getSpecializations().subscribe((data:Specialization[])=>\r\n        this.specializations = data);\r\n    }\r\n    editSpecialization(newspec: Specialization) {\r\n        this.spec = newspec;\r\n    }\r\n    \r\n    deleteSpecialization(goodbyespec: Specialization) {\r\n        console.log(goodbyespec);\r\n        this.specializationservice.deleteSpecialization(goodbyespec.id).subscribe(\r\n            result=>{this.loadSpecializations();}\r\n        );\r\n    }\r\n\r\n    save(newspec: Specialization) {\r\n        if (newspec.id == null) {\r\n            this.specializationservice.createSpecialization(newspec).subscribe((data: Specialization) =>\r\n                this.specializations.push(data));\r\n        }\r\n        else {\r\n            this.specializationservice.editSpecialization(newspec).subscribe(result=>{this.loadSpecializations();})\r\n        }\r\n        this.cancel();\r\n    }\r\n\r\n    cancel() {\r\n        this.spec = new Specialization();\r\n        this.tableMode = true;\r\n    }\r\n\r\n    add() {\r\n        this.cancel();\r\n        this.tableMode = false;\r\n    }    \r\n}\r\n\r\n\r\n","<!-- <input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />  -->\r\n<h1>Специализации</h1>\r\n<input type=\"button\" value=\"Добавить Специализацию\" class=\"btn btn-default\" (click)=\"add()\" />\r\n<!-- <li>\r\n    <button mat-raised-button (click)=\"openDialog()\">Pick one</button>\r\n</li> -->\r\n<table *ngIf=\"tableMode; else CreateSpecialization\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Id</td>\r\n            <td>Имя</td>\r\n            <td>Создан</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let specc of specializations\"> \r\n            <ng-template [ngIf] = \"spec?.id != specc.id\" [ngIfElse]=\"EditSpecialization\">\r\n                <td>{{specc?.id}}</td>\r\n                <td>{{specc?.name}}</td>\r\n                <td>{{specc?.created}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editSpecialization(specc)\">\r\n                        Изменить</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"deleteSpecialization(specc)\">\r\n                        Удалить</button>\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<ng-template #CreateSpecialization>\r\n    <div class=\"form-group\">\r\n        <label>Имя Специализации</label>\r\n        <input type=\"text\" [(ngModel)]=\"spec.name\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save(spec)\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #EditSpecialization>\r\n    <div class=\"form-group\">\r\n        <label>Имя Специализации</label>\r\n        <input type=\"text\" [(ngModel)] = \"spec.name\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save(spec)\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Specialization } from './Specialization';\r\n\r\n@Injectable()\r\nexport class SpecializationService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private url = \"https://localhost:44351/api/home/specialization\";\r\n    private urlforcreating = \"https://localhost:44351/api/home/createspecialization\";\r\n    private urlfordeleting = \"https://localhost:44351/api/home/deletespecialization\";\r\n\r\n    getSpecializations() {\r\n        return this.http.get(this.url);\r\n    }\r\n    \r\n    getSpecialization(id: number) {\r\n        return  this.http.get(this.url+'/'+id);\r\n    }\r\n\r\n    createSpecialization(spec: Specialization) {\r\n        return this.http.post(this.urlforcreating, spec);\r\n    }\r\n\r\n    editSpecialization(spec: Specialization) {\r\n        return this.http.put(this.url, spec);\r\n    }\r\n\r\n    deleteSpecialization(specid: number) {\r\n        console.log(specid);\r\n        return this.http.delete(this.urlfordeleting+'/'+specid);\r\n    }\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}